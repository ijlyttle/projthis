% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_github_action.R
\name{proj_use_github_action}
\alias{proj_use_github_action}
\title{Use GitHub Action}
\usage{
proj_use_github_action(
  name = "project-run",
  save_as = NULL,
  ignore = TRUE,
  open = TRUE
)
}
\arguments{
\item{name}{Name of the GitHub action, with or without \code{.yaml} extension}

\item{save_as}{Name of the actions file. Defaults to \code{basename(url)}
for \code{use_github_action()}.}

\item{ignore}{Should the newly created file be added to \code{.Rbuildignore}?}

\item{open}{Open the newly created file for editing? Happens in RStudio, if
applicable, or via \code{\link[utils:file.edit]{utils::file.edit()}} otherwise.}
}
\value{
Invisible \code{NULL}, called for side effects.
}
\description{
You can use a GitHub Action to automate the building and deployment of your
project. This function wraps \code{\link[usethis:use_github_action]{usethis::use_github_action()}}  to install an
Actions file that will:
\itemize{
\item install R
\item install and cache your dependencies (using DESCRIPTION)
}

You will need to adapt the sections in your Actions file to:
\itemize{
\item build your project
\item deploy your project
}

To help you draw the
\href{https://knowyourmeme.com/memes/how-to-draw-an-owl}{"rest of the owl"}, the
\href{https://github.com/r-lib/actions}{r-lib actions repository} is a great place
to start.
}
\examples{
# not run because it produces side effects
if (FALSE) {
  proj_use_github_action()
}
}
