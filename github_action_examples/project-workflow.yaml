# These are assembled from snippets of actions built by Jim Hester.
# You will need to customize this template; the r-lib actions repository
# is a great place to start to figure things out: https://github.com/r-lib/actions

# This action is based on the 'pkgdown' action:
# https://github.com/r-lib/actions/blob/master/examples/pkgdown.yaml

# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions

# More information at https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions

# I'm adding a lot of comments because you will likely need to adapt this
# to your circumstances. I trust the comments will be helpful; I also trust
# that anyone who sees a mistatement/error will feel welcome to file an issue
# at: https://github.com/ijlyttle/projthis/issues

# This section is used to define the triggers for launching an action.
# Comment, or uncomment what you think might be useful in your situation,
# or write your own.
on:
  # runs whenever you push any Rmarkdown file
  push:
    paths:
      - "**.Rmd"
  # # runs on a schedule using UTC - see https://en.wikipedia.org/wiki/Cron
  # # **important**
  # #   uncommented, `schedule:` has to have the same indentation as `push:`
  # schedule:
  #   - cron:  '00 08 * * *' # 08:00 UTC every day

name: run-workflows

jobs:
  # name of the job
  run-workflows:
    # supported: ubuntu-20.04, macOS-latest, windows-latest
    runs-on: macOS-latest
    # set variables in your environment:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
    steps:

      # these steps are provided by Jim Hester - as he makes improvements,
      # you may wish to update these steps. Keep an eye on:
      #   https://github.com/r-lib/actions/blob/master/examples/pkgdown.yaml
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        # option set because compiling from source can fail
        #  - perhaps better to use older version for a couple days until binaries are updated
        # uncomment call to `remotes::install_local(".")` to install project as a package
        run: |
          options(install.packages.compile.from.source = "never")
          remotes::install_deps(dependencies = TRUE)
          # remotes::install_local(".")
        shell: Rscript {0}

      # adapt this step to build your project
      - name: Render
        # - uncomment and adapt the call to `projthis::proj_workflow_render()`
        # - to run another workflow, add another call
        run: |
          rmarkdown::render("README.Rmd")
        shell: Rscript {0}

      # adapt this step to deploy your project
      - name: Deploy
        # - `git add -u` adds files that are *already* part of the repository
        # - you may have to be creative with your `git add` call(s)
        # - be wary of `git add -A`, as you might commit files you wish you hadn't
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add 'README.md'
          git commit -m "updated by Actions" || echo "No changes to commit"
          git push || echo "No changes to commit"
